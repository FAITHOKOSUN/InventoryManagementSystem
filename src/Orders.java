
import Database.InventoryUtils;
import cmmd.Openpdf;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Faith
 */
public class Orders extends javax.swing.JFrame {

    private int cstid = 0;
    private int productid = 0;
    private int finaltotalprice = 0;
    private String orderid = "";

    /**
     * Creates new form Orders
     */
    public Orders() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private void classProductFields() {
        productid = 0;
        txtproductname.setText("");
        txtproductprice.setText("");
        txtproductdescription.setText("");
        txorderquantity.setText("");

    }

    public String getUniqueId(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        CartTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtmobile = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtproductname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtproductprice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtproductdescription = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txorderquantity = new javax.swing.JTextField();
        txtcart = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        saveorderdetails = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lbltotalprice = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Customers List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 84, -1, -1));

        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email"
            }
        ));
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CustomerTable);
        if (CustomerTable.getColumnModel().getColumnCount() > 0) {
            CustomerTable.getColumnModel().getColumn(3).setHeaderValue("Quantity");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 117, 350, 237));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Products List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(527, 84, -1, -1));

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price", "Description", "Category ID", "Category Name"
            }
        ));
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ProductTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 117, 431, 224));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Cart");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1042, 84, -1, -1));

        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price", "Description ", "Subtotal"
            }
        ));
        CartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CartTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(CartTable);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(867, 117, 442, 227));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Selected Customer: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 367, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, -1));

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 445, 185, -1));
        getContentPane().add(txtmobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 445, 140, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Mobile Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, -1));
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 517, 211, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Selected Product: ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(543, 367, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Product Name");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 410, -1, -1));

        txtproductname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductnameActionPerformed(evt);
            }
        });
        getContentPane().add(txtproductname, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, 140, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Product Price");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 410, -1, -1));
        getContentPane().add(txtproductprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 440, 165, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Product Description");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 487, -1, -1));

        txtproductdescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtproductdescriptionActionPerformed(evt);
            }
        });
        getContentPane().add(txtproductdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 518, 211, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Order Quantity");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 490, -1, 25));

        txorderquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txorderquantityActionPerformed(evt);
            }
        });
        getContentPane().add(txorderquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 520, 84, -1));

        txtcart.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtcart.setText("Add to Cart");
        txtcart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcartActionPerformed(evt);
            }
        });
        getContentPane().add(txtcart, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 560, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Total Amount #: ");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 370, -1, -1));

        saveorderdetails.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        saveorderdetails.setText("Print Order Details");
        saveorderdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveorderdetailsActionPerformed(evt);
            }
        });
        getContentPane().add(saveorderdetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 400, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 400, -1, -1));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 440, -1, -1));

        lbltotalprice.setBackground(new java.awt.Color(255, 255, 255));
        lbltotalprice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbltotalprice.setText("000000");
        getContentPane().add(lbltotalprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 370, 70, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1360, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1360, 520));

        jPanel2.setBackground(new java.awt.Color(153, 0, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Order");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, 30));

        jLabel15.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("INVENTORY MANAGEMENT SYSTEM");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 70));

        jPanel3.setBackground(new java.awt.Color(153, 0, 153));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 588, 1360, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        txtname.setEditable(false);
        txtmobile.setEditable(false);
        txtemail.setEditable(false);
        txtproductname.setEditable(false);
        txtproductprice.setEditable(false);
        txtproductdescription.setEditable(false);

        DefaultTableModel model = (DefaultTableModel) CustomerTable.getModel();
        DefaultTableModel productmodel = (DefaultTableModel) ProductTable.getModel();

        String query = "select * from customers_tb ";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
            PreparedStatement pt = con.prepareStatement(query);
            ResultSet rs = pt.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID"),
                    rs.getString("Name"),
                    rs.getString("mobilenumber"),
                    rs.getString("email"),});
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        String query2 = "select * from product_tb inner join category_tb on product_tb.category_fk = category_tb.id";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
            PreparedStatement pt2 = con.prepareStatement(query2);
            ResultSet rs2 = pt2.executeQuery();
            while (rs2.next()) {
                productmodel.addRow(new Object[]{
                    rs2.getString("ID"),
                    rs2.getString("Name"),
                    rs2.getString("Quantity"),
                    rs2.getString("Price"),
                    rs2.getString("Description"),
                    rs2.getString("Category_fk"),
                    rs2.getString(8)
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_formComponentShown

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtproductnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductnameActionPerformed

    private void txtproductdescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtproductdescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtproductdescriptionActionPerformed

    private void txtcartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcartActionPerformed

        String noofunits = txorderquantity.getText();
        if (!noofunits.isEmpty()) {
            String productName = txtproductname.getText();
            String productdesc = txtproductdescription.getText();
            String productprice = txtproductprice.getText();

            // Ensure that both quantity and price are fetched correctly
            String quantity = txorderquantity.getText();
            String price = txtproductprice.getText();

            int totalprice = Integer.parseInt(quantity) * Integer.parseInt(price);
            int checkstock = 0;
            int checkproductexistincart = 0;

            String query = "SELECT * FROM product_tb WHERE id = ?";
            try ( Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");  
                    PreparedStatement pt = con.prepareStatement(query)) {
                pt.setInt(1, productid);
                ResultSet rs = pt.executeQuery();

                while (rs.next()) {
                    if (rs.getInt("quantity") >= Integer.parseInt(noofunits)) {
                        checkstock = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "Product is out of stock. Only " + rs.getInt("quantity") + " left.");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

            if (checkstock == 1) {
                DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
                for (int i = 0; i < CartTable.getRowCount(); i++) {
                    if (Integer.parseInt(model.getValueAt(i, 0).toString()) == productid) {
                        checkproductexistincart = 1;
                        JOptionPane.showMessageDialog(null, "Product already exists in cart.");
                        break;
                    }
                }

                if (checkproductexistincart == 0) {
                    model.addRow(new Object[]{productid, productName, quantity, price, productdesc, totalprice});
                    finaltotalprice += totalprice;
                    lbltotalprice.setText(String.valueOf(finaltotalprice));
                    JOptionPane.showMessageDialog(null, "Product added successfully to cart.");
                } else {
                    classProductFields();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Quantity field is required.");
        }


    }//GEN-LAST:event_txtcartActionPerformed

    private void txorderquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txorderquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txorderquantityActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Orders().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void CustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseClicked
        // TODO add your handling code here:
        int index = CustomerTable.getSelectedRow();
        TableModel model = CustomerTable.getModel();

        String id = model.getValueAt(index, 0).toString();
        cstid = Integer.parseInt(id);
        String name = model.getValueAt(index, 1).toString();
        txtname.setText(name);

        String mobilenumber = model.getValueAt(index, 2).toString();
        txtmobile.setText(mobilenumber);

        String email = model.getValueAt(index, 3).toString();
        txtemail.setText(email);
    }//GEN-LAST:event_CustomerTableMouseClicked

    private void ProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMouseClicked
        // TODO add your handling code here:
        int index = ProductTable.getSelectedRow();
        TableModel model = ProductTable.getModel();

        String id = model.getValueAt(index, 0).toString();
        productid = Integer.parseInt(id);
        String productname = model.getValueAt(index, 1).toString();
        txtproductname.setText(productname);

        String productprice = model.getValueAt(index, 2).toString();
        txtproductprice.setText(productprice);

        String productdesc = model.getValueAt(index, 4).toString();
        txtproductdescription.setText(productdesc);

//        String  orderquan = model.getValueAt(index, 4).toString();
//        txtproductname.setText(productname);
    }//GEN-LAST:event_ProductTableMouseClicked

    private void CartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CartTableMouseClicked
        // TODO add your handling code here:
        int index = CartTable.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove from cart?", "select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            TableModel model = CartTable.getModel();
            String subtotal = model.getValueAt(index, 5).toString();
            finaltotalprice = finaltotalprice - Integer.parseInt(subtotal);
            lbltotalprice.setText(String.valueOf(finaltotalprice));
            ((DefaultTableModel) CartTable.getModel()).removeRow(index);

        }
    }//GEN-LAST:event_CartTableMouseClicked

    private void saveorderdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveorderdetailsActionPerformed
        // TODO add your handling code here:
        if (finaltotalprice != 0 && !txtname.getText().equals("")) {
            orderid = getUniqueId("Bill");
            DefaultTableModel cmodel = (DefaultTableModel) CartTable.getModel();
            if (CartTable.getRowCount() != 0) {
                for (int i = 0; i < CartTable.getRowCount(); i++) {
                    try {
                        String query = "update product_tb set quantity=quantity-" + Integer.parseInt(cmodel.getValueAt(i, 2).toString()) + " where id=" + Integer.parseInt(cmodel.getValueAt(i, 0).toString());
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
                        PreparedStatement pt = con.prepareStatement(query);

                        pt.executeUpdate();

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error connecting to database: " + ex.getMessage());
                    }
                }
            }
            try {
                SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
                Calendar cal = Calendar.getInstance();
                String query2 = "INSERT INTO order_details_tb (OrderID,Customer_fk,OrderDate,TotalPaid) VALUES (?, ?, ?,?)";
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
                PreparedStatement ps = con.prepareStatement(query2);
                ps.setString(1, orderid);
                ps.setInt(2, cstid);
                ps.setString(3, myFormat.format(cal.getTime()));
                ps.setInt(4, finaltotalprice);

                ps.executeUpdate();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error connecting to database: " + ex.getMessage());
            }

            //Creating Document
            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            try {

                String filePath = InventoryUtils.billpath + File.separator + orderid + ".pdf";
                System.out.println("File path: " + filePath);

                // Initialize PdfWriter with the file path
                PdfWriter.getInstance(doc, new FileOutputStream(filePath));
                doc.open(); // Open the document here

                // Adding content to the document...
                SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
                Calendar cal = Calendar.getInstance();
                //PdfWriter.getInstance(doc, new FileOutputStream(InventoryUtils.billpath + "" + orderid + ".pdf"));
                //doc.open();
                Paragraph projectname = new Paragraph("			                                  INVENTORY MANAGEMENT SYSTEM \n          ");
                doc.add(projectname);
                Paragraph starline = new Paragraph("..................................................................................");
                doc.add(starline);
                Paragraph details = new Paragraph("\tORDER ID:" + orderid + "\nDATE:" + myFormat.format(cal.getTime()) + "\nTOTAL AMOUNT PAID:N" + finaltotalprice);
                doc.add(details);
                doc.add(starline);
                PdfPTable tb1 = new PdfPTable(5); // Create a table with 5 columns

// Create header cells with background color
                PdfPCell nameCell = new PdfPCell(new Phrase("Name"));
                PdfPCell descriptionCell = new PdfPCell(new Phrase("Description"));
                PdfPCell priceCell = new PdfPCell(new Phrase("Price"));
                PdfPCell quantityCell = new PdfPCell(new Phrase("Quantity"));
                PdfPCell subtotalpriceCell = new PdfPCell(new Phrase("Sub Total price"));

                BaseColor backgroundColor = new BaseColor(255, 204, 51);
                nameCell.setBackgroundColor(backgroundColor);
                descriptionCell.setBackgroundColor(backgroundColor);
                priceCell.setBackgroundColor(backgroundColor);
                quantityCell.setBackgroundColor(backgroundColor);
                subtotalpriceCell.setBackgroundColor(backgroundColor);

// Add header cells to the table
                tb1.addCell(nameCell);
                tb1.addCell(descriptionCell);
                tb1.addCell(priceCell);
                tb1.addCell(quantityCell);
                tb1.addCell(subtotalpriceCell);

// Add table data
                for (int i = 0; i < CartTable.getRowCount(); i++) {
                    String name = CartTable.getValueAt(i, 1).toString(); // Assuming name is at index 1
                    String description = CartTable.getValueAt(i, 4).toString(); // Assuming description is at index 4
                    String price = CartTable.getValueAt(i, 3).toString(); // Assuming price is at index 2
                    String quantity = CartTable.getValueAt(i, 2).toString(); // Assuming quantity is at index 3
                    String subtotalPrice = CartTable.getValueAt(i, 5).toString(); // Assuming subtotal is at index 5

                    // Add data to the table
                    tb1.addCell(name);
                    tb1.addCell(description);
                    tb1.addCell(price);
                    tb1.addCell(quantity);
                    tb1.addCell(subtotalPrice);
                }

// Add the table to the document
                doc.add(tb1);
                doc.add(starline);
                Paragraph thanks = new Paragraph("Thank you for your patronage");
                doc.add(thanks);
                Openpdf.OpenId(orderid);
                //OPEN PDF

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                doc.close();
            }
            setVisible(false);
            new Orders().setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "please choose from the customer list");
        }
    }//GEN-LAST:event_saveorderdetailsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orders.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orders.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orders.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orders.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CartTable;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JTable ProductTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lbltotalprice;
    private javax.swing.JButton saveorderdetails;
    private javax.swing.JTextField txorderquantity;
    private javax.swing.JButton txtcart;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtmobile;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtproductdescription;
    private javax.swing.JTextField txtproductname;
    private javax.swing.JTextField txtproductprice;
    // End of variables declaration//GEN-END:variables
}
