
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Faith
 */
public class Products extends javax.swing.JFrame {

    private int id = 0;
    private int totalQuantity = 0;

    /**
     * Creates new form Products
     */
    public Products() {
        initComponents();
        setLocationRelativeTo(null);

    }

    private void getAllCategory() {
        String query = "SELECT * FROM category_tb ";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
            PreparedStatement pt = con.prepareStatement(query);
            ResultSet rs = pt.executeQuery();
            Combocat.removeAllItems();

            while (rs.next()) {
                Combocat.addItem(rs.getString("id") + ". " + rs.getString("name"));

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error connecting to database: " + e.getMessage());
        }
    }

    private boolean validateFields(String formtype) {
        if (formtype.equals("edit") && !TxtName.getText().equals("") && !txtPrice.getText().equals("") && !txtDesc.getText().equals("")) {
            return false;
        } else if (formtype.equals("new") && !TxtName.getText().equals("") && !txtPrice.getText().equals("") && !txtDesc.getText().equals("") && !txtQuan.getText().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tableproduct = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        TxtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtQuan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDesc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Combocat = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCls = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tableproduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price", "Description", "Category ID", "Category Name"
            }
        ));
        Tableproduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableproductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tableproduct);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 73, 480, 440));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, -1, -1));
        getContentPane().add(TxtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 150, 209, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Quantity");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, -1, -1));
        getContentPane().add(txtQuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 220, 209, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Price");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, -1, -1));
        getContentPane().add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 280, 209, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Description");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, -1, -1));

        txtDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescActionPerformed(evt);
            }
        });
        getContentPane().add(txtDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, 209, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Category");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 370, -1, -1));

        Combocat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Combocat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(Combocat, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, -1, -1));

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 460, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 460, -1, -1));

        btnReset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 460, -1, -1));

        btnCls.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCls.setText("Close");
        btnCls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClsActionPerformed(evt);
            }
        });
        getContentPane().add(btnCls, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 460, -1, -1));

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, 160, 30));

        btnsearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, -1, 30));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 840, 450));

        jPanel2.setBackground(new java.awt.Color(153, 0, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Product");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, -1, 30));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("INVENTORY MANAGEMENT SYSTEM");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 60));

        jPanel3.setBackground(new java.awt.Color(153, 0, 153));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 514, 840, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        getAllCategory();

        DefaultTableModel model = (DefaultTableModel) Tableproduct.getModel();
        String query = "select * from product_tb inner join category_tb on product_tb.category_fk = category_tb.id";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
            PreparedStatement pt = con.prepareStatement(query);
            ResultSet rs = pt.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID"),
                    rs.getString("Name"),
                    rs.getString("Quantity"),
                    rs.getString("Price"),
                    rs.getString("Description"),
                    rs.getString("Category_fk"),
                    rs.getString(8)});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error connecting to database: " + e.getMessage());
        }
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void btnClsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClsActionPerformed
        // TODO add your handling code here:
        
        setVisible(false);
    }//GEN-LAST:event_btnClsActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Products().setVisible(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        // Get the selected category
        String category = (String) Combocat.getSelectedItem();

        // Split the category string to get the category ID
        String categoryid[] = category.split("\\.");

        // Ensure that categoryid array has at least one element
        if (categoryid.length > 0) {
            // Extract the category ID and trim any leading or trailing whitespaces
            String categoryId = categoryid[0].trim();

            // Validate fields
            String name = TxtName.getText();
            String quantity = txtQuan.getText();
            String price = txtPrice.getText();
            String description = txtDesc.getText();

            if (validateFields("new")) {
                JOptionPane.showMessageDialog(null, "All fields required");
            } else {
                try {
                    // Insert the product into the database
                    String query = "INSERT INTO product_tb (name, quantity, price, description, category_fk) VALUES (?, ?, ?, ?, ?)";
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
                    PreparedStatement pt = con.prepareStatement(query);
                    pt.setString(1, name);
                    pt.setString(2, quantity);
                    pt.setString(3, price);
                    pt.setString(4, description);
                    pt.setString(5, categoryId); // Using categoryId instead of categoryid[0]
                    pt.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Product successfully added");
                    setVisible(false);
                    new Products().setVisible(true);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error connecting to database: " + e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid category format");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void TableproductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableproductMouseClicked
        // TODO add your handling code here:
        int index = Tableproduct.getSelectedRow();
        TableModel model = Tableproduct.getModel();
        String iden = model.getValueAt(index, 0).toString();
        id = Integer.parseInt(iden);

        String name = model.getValueAt(index, 1).toString();
        TxtName.setText(name);

        String quantity = model.getValueAt(index, 2).toString();
        totalQuantity = 0;
        txtQuan.setText("");
        totalQuantity = Integer.parseInt(quantity);

        String price = model.getValueAt(index, 3).toString();
        txtPrice.setText(price);

        String description = model.getValueAt(index, 4).toString();
        txtDesc.setText(description);

        Combocat.removeAllItems();
        String catid = model.getValueAt(index, 5).toString();
        String CategoryName = model.getValueAt(index, 6).toString();
        Combocat.addItem(catid +  ". "  + CategoryName);

        String query = "SELECT * FROM category_tb ";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
            PreparedStatement pt = con.prepareStatement(query);
            ResultSet rs = pt.executeQuery();
            //Combocat.removeAllItems();

            while (rs.next()) {

                if (Integer.parseInt(catid) != rs.getInt(1)) {
                    Combocat.addItem(rs.getString("id") + ". " + rs.getString("name"));
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error connecting to database: " + e.getMessage());
        }
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);

    }//GEN-LAST:event_TableproductMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // Get the selected category
        String category = (String) Combocat.getSelectedItem();

        // Split the category string to get the category ID
        String categoryid[] = category.split("\\.");

        // Ensure that categoryid array has at least one element
        if (categoryid.length > 0) {
            // Extract the category ID and trim any leading or trailing whitespaces
            String categoryId = categoryid[0].trim();

            // Validate fields
            String name = TxtName.getText();
            String quantity = txtQuan.getText();
            String price = txtPrice.getText();
            String description = txtDesc.getText();

            if (validateFields("edit")) {
                JOptionPane.showMessageDialog(null, "All fields required");
            } else {
                try {
                    if(!quantity.equals("")){
                        totalQuantity = totalQuantity + Integer.parseInt(quantity);
                    }
                    // update the product into the database
                    String query = "update product_tb set name = ?, quantity = ?, price = ?, description = ?, category_fk = ? where id = ?";
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
                    PreparedStatement pt = con.prepareStatement(query);
                    pt.setString(1, name);
                    pt.setInt(2, totalQuantity);
                    pt.setString(3, price);
                    pt.setString(4, description);
                    pt.setString(5, categoryId); // Using categoryId instead of categoryid[0]
                    pt.setInt(6, id);
                    pt.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Product successfully updated");
                    setVisible(false);
                    new Products().setVisible(true);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error connecting to database: " + e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid category format");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
         DefaultTableModel searchmodel = (DefaultTableModel) Tableproduct.getModel();
    TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(searchmodel);
    Tableproduct.setRowSorter(obj);
    obj.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
         DefaultTableModel searchmodel = (DefaultTableModel) Tableproduct.getModel();
    TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(searchmodel);
    Tableproduct.setRowSorter(obj);
    obj.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
    }//GEN-LAST:event_txtsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Combocat;
    private javax.swing.JTable Tableproduct;
    private javax.swing.JTextField TxtName;
    private javax.swing.JButton btnCls;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuan;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
