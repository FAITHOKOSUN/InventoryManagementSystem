
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import static java.util.Locale.filter;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import static javax.swing.UIManager.getString;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.TableView.TableRow;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Faith
 */
public class ManageUser extends javax.swing.JFrame {

    private int inventory_tb = 0;

    public ManageUser() {
        initComponents();

        setLocationRelativeTo(null);

    }

//
//private boolean validateFields(String formType) {
//    if (formType.equals("edit") && UserName.getText().equals("") && UserNumber.getText().equals("") && UserEmail.getText().equals("") && Useradd.getText().equals("")) {
//        return false;
//    } else if (formType.equals("new") && UserName.getText().equals("") && UserNumber.getText().equals("") && UserEmail.getText().equals("") && UserPwd.getText().equals("") && Useradd.getText().equals("")) {
//        return false;
//    } else {
//        return true;
//    }
//}
    private boolean validateFields(String formType) {
        if (formType.equals("edit") && UserName.getText().isEmpty() && UserNumber.getText().isEmpty() && UserEmail.getText().isEmpty() && Useradd.getText().isEmpty()) {
            return false;
        } else if (formType.equals("new") && (UserName.getText().isEmpty() || UserNumber.getText().isEmpty() || UserEmail.getText().isEmpty() || UserPwd.getText().isEmpty() || Useradd.getText().isEmpty())) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        UserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        UserNumber = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        UserEmail = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        UserPwd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ComboBox = new javax.swing.JComboBox<>();
        Useradd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        BtnSave = new javax.swing.JButton();
        BtnUpdate = new javax.swing.JButton();
        BtnReset = new javax.swing.JButton();
        UserName1 = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        BtnCls = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ManageUser = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UserTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email", "Address", "Status"
            }
        ));
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(UserTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 416, 360));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 97, -1, -1));
        getContentPane().add(UserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 123, 250, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mobile Number");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 161, -1, -1));
        getContentPane().add(UserNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 182, 253, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Email");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 213, -1, -1));
        getContentPane().add(UserEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 234, 253, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 265, -1, -1));
        getContentPane().add(UserPwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 286, 253, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Status");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 376, -1, -1));

        ComboBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        getContentPane().add(ComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 397, -1, -1));
        getContentPane().add(Useradd, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 338, 253, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Address");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 317, -1, -1));

        BtnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnSave.setText("Save");
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(BtnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 445, -1, -1));

        BtnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnUpdate.setText("Update");
        BtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(BtnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(543, 445, -1, -1));

        BtnReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnReset.setText("Reset");
        BtnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnResetActionPerformed(evt);
            }
        });
        getContentPane().add(BtnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(628, 445, -1, -1));
        getContentPane().add(UserName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 123, 250, -1));

        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 140, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        BtnCls.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnCls.setText("Close");
        BtnCls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnClsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(540, Short.MAX_VALUE)
                .addComponent(BtnCls)
                .addGap(245, 245, 245))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(428, Short.MAX_VALUE)
                .addComponent(BtnCls)
                .addGap(19, 19, 19))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 850, 470));

        jPanel2.setBackground(new java.awt.Color(153, 0, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ManageUser.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ManageUser.setForeground(new java.awt.Color(255, 255, 255));
        ManageUser.setText("INVENTORY MANAGEMENT SYSTEM");
        jPanel2.add(ManageUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, -1, -1));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("MANAGE USERS");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 60));

        jPanel3.setBackground(new java.awt.Color(153, 0, 153));
        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 850, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        DefaultTableModel model = (DefaultTableModel) UserTable.getModel();
        String query = "SELECT * FROM inventory_tb WHERE userrole = 'superadmin'";
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
            PreparedStatement pt = con.prepareStatement(query);
            ResultSet rs = pt.executeQuery();

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id"),
                    rs.getString("name"),
                    rs.getString("mobilenumber"),
                    rs.getString("email"),
                    // rs.getString("password"),
                    rs.getString("address"),
                    rs.getString("status")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error connecting to database: " + e.getMessage());
        }
        BtnUpdate.setEnabled(false);

    }//GEN-LAST:event_formComponentShown

    private void BtnClsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnClsActionPerformed
        setVisible(false);

    }//GEN-LAST:event_BtnClsActionPerformed

    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed
        // TODO add your handling code here: 

        // TODO add your handling code here: 
        String name = UserName.getText();
        String mobilenumber = UserNumber.getText();
        String email = UserEmail.getText();
        String password = UserPwd.getText();
        String address = Useradd.getText();
        String status = (String) ComboBox.getSelectedItem();

        // Debug prints to check field values
//    System.out.println("Name: " + name);
//    System.out.println("Mobile Number: " + mobilenumber);
//    System.out.println("Email: " + email);
//    System.out.println("Password: " + password);
//    System.out.println("Address: " + address);
//    System.out.println("Status: " + status);
        if (validateFields("new")) {
            // All fields are filled, proceed with saving
            try {
                String query = "INSERT INTO inventory_tb(userrole, name, mobilenumber, email, password, address, status) VALUES('superadmin', ?, ?, ?, ?, ?, ?)";
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
                PreparedStatement pt = con.prepareStatement(query);
                pt.setString(1, name);
                pt.setString(2, mobilenumber);
                pt.setString(3, email);
                pt.setString(4, password);
                pt.setString(5, address);
                pt.setString(6, status);

                pt.executeUpdate();
                JOptionPane.showMessageDialog(null, "User Added Successfully");
                setVisible(false);
                new ManageUser().setVisible(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error connecting to database: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "All fields are required.");
        }


    }//GEN-LAST:event_BtnSaveActionPerformed

    private void UserTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMouseClicked
        int index = UserTable.getSelectedRow();
        TableModel model = UserTable.getModel();

        String id = model.getValueAt(index, 0).toString();
        inventory_tb = Integer.parseInt(id);
        String name = model.getValueAt(index, 1).toString();
        UserName.setText(name);

        String mobilenumber = model.getValueAt(index, 2).toString();
        UserNumber.setText(mobilenumber);

        String email = model.getValueAt(index, 3).toString();
        UserEmail.setText(email);

        String address = model.getValueAt(index, 4).toString();
        Useradd.setText(address);

        String status = model.getValueAt(index, 5).toString();
        ComboBox.removeAllItems();
        if (status.equals("Active")) {
            ComboBox.addItem("Active");
            ComboBox.addItem("Inactive");

        } else {
            ComboBox.addItem("Active");
            ComboBox.addItem("Inactive");
        }

        UserPwd.setEditable(false);
        UserPwd.setBackground(Color.DARK_GRAY);

        BtnSave.setEnabled(false);
        BtnUpdate.setEnabled(true);
    }//GEN-LAST:event_UserTableMouseClicked

    private void BtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUpdateActionPerformed
        String name = UserName.getText();
        String mobilenumber = UserNumber.getText();
        String email = UserEmail.getText();
//        String password = UserPwd.getText();
        String address = Useradd.getText();
        String status = (String) ComboBox.getSelectedItem();

        if (validateFields("edit")) {

            try {
                String query = "update inventory_tb set name = ?, mobilenumber = ?, email = ?, address = ?, status = ? where id = ?";
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory", "root", "");
                PreparedStatement pt = con.prepareStatement(query);
                pt.setString(1, name);
                pt.setString(2, mobilenumber);
                pt.setString(3, email);
                pt.setString(4, address);
                pt.setString(5, status);
                pt.setInt(6, inventory_tb);

                pt.executeUpdate();
                JOptionPane.showMessageDialog(null, "User Updated Successfully");
                setVisible(false);
                new ManageUser().setVisible(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error connecting to database: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "All fields are required.");
        }
    }//GEN-LAST:event_BtnUpdateActionPerformed

    private void BtnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ManageUser().setVisible(true);


    }//GEN-LAST:event_BtnResetActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:

        DefaultTableModel searchmodel = (DefaultTableModel) UserTable.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(searchmodel);
        UserTable.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter("(?i)" + txtsearch.getText()));


    }//GEN-LAST:event_btnsearchActionPerformed

    private void txtsearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchKeyPressed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        DefaultTableModel searchmodel = (DefaultTableModel) UserTable.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(searchmodel);
        UserTable.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter("(?i)" + txtsearch.getText()));
    }//GEN-LAST:event_txtsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUser.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCls;
    private javax.swing.JButton BtnReset;
    private javax.swing.JButton BtnSave;
    private javax.swing.JButton BtnUpdate;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JLabel ManageUser;
    private javax.swing.JTextField UserEmail;
    private javax.swing.JTextField UserName;
    private javax.swing.JTextField UserName1;
    private javax.swing.JTextField UserNumber;
    private javax.swing.JTextField UserPwd;
    private javax.swing.JTable UserTable;
    private javax.swing.JTextField Useradd;
    private javax.swing.JButton btnsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
